name: Build4

on:
  workflow_dispatch:
    inputs:
      type:
        description: 'Select release type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major
jobs:
  create-commit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: txkodo/MyTestAction@v2
        id: get_version
        with:
          update-json: true
          release-type: ${{inputs.type}}

      - run: |
          git config --local user.name github-actions[bot]
          git config --local user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add .
          git commit -m "ðŸ”– Release ${{ steps.get_version.outputs.next-version }}"
          git push
          git checkout main
          git merge dev
          git push

    outputs:
      current-version: ${{steps.get_version.outputs.current-version }}
      next-version: ${{steps.get_version.outputs.next-version }}

  build-electron:
    needs: create-commit

    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Setup NodeJS Environment 18
        uses: actions/setup-node@v2
        with:
          node-version: 18
          cache: 'yarn'

      - run: |
          git pull
          yarn install
          yarn build

      - name: ls
        if: matrix.os == 'macos-latest'
        run: |
          ls -a ${{github.workspace}}
          ls -a ${{github.workspace}}/dist
          ls -a ${{github.workspace}}/dist/electron
          ls -a ${{github.workspace}}/dist/electron/Packaged

      - name: Move BuildData Win
        if: matrix.os == 'windows-latest'
        run: mv "${{github.workspace}}/dist/electron/Packaged/gha ${{ needs.create-commit.outputs.next-version }}.msi" ${{ matrix.os }}

      - name: Move BuildData Mac
        if: matrix.os == 'macos-latest'
        run: mv "${{github.workspace}}/dist/electron/Packaged/gha-${{ needs.create-commit.outputs.next-version }}.pkg" ${{ matrix.os }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}
          path: ${{ matrix.os }}
          retention-days: 1

  create-release:
    needs:
      - create-commit
      - build-electron

    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create a Release
        id: create_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ needs.create-commit.outputs.next-version }}
          name: ${{ github.event.pull_request.title }}
          version: ${{ needs.create-commit.outputs.next-version }}
          publish: true
          prerelease: false

  upload-build:
    needs:
      - create-commit
      - create-release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        include:
          - os: macos-latest
            ext: pkg
          - os: windows-latest
            ext: msi

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.os }}

      - name: Upload a Release Asset
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ matrix.os }}
          asset_name: gha-${{ needs.create-commit.outputs.next-version }}.${{ matrix.ext }}
          asset_content_type: appliction/${{ matrix.ext }}
